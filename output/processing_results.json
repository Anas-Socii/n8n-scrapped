[
  {
    "input_workflow_name": "32_Create_a_customer_and_add_them_to_a_segment_in_Customer.io.json",
    "output_workflow_name": "Create_Customer_and_Add_to_Segment_Customerio",
    "output_workflow_file_path": "analyzed_workflows/Create_Customer_and_Add_to_Segment_Customerio/workflow.json",
    "output_readme_file_path": "analyzed_workflows/Create_Customer_and_Add_to_Segment_Customerio/README.md",
    "summary": "Creates a customer in Customer.io and adds them to a segment using a manual trigger.",
    "inputs": ["Manual Trigger"],
    "nodes_used": ["Manual Trigger", "CustomerIo", "CustomerIo1"],
    "outputs": ["Customer created in Customer.io", "Customer added to segment in Customer.io"],
    "processed_at": "16/06/2025 12:41"
  },
  {
    "input_workflow_name": "33_Postgres_Data_Ingestion.json",
    "output_workflow_name": "Postgres_Data_Ingestion",
    "output_workflow_file_path": "analyzed_workflows/Postgres_Data_Ingestion/workflow.json",
    "output_readme_file_path": "analyzed_workflows/Postgres_Data_Ingestion/README.md",
    "summary": "Automates the ingestion of sensor data into a Postgres database on a scheduled basis.",
    "inputs": ["Cron"],
    "nodes_used": ["Cron", "Function", "Postgres"],
    "outputs": ["Sensor data inserted into Postgres table 'n8n'"],
    "processed_at": "16/06/2025 12:41"
  },
  {
    "input_workflow_name": "33_Receive_updates_for_support_in_Zendesk.json",
    "output_workflow_name": "Receive_Updates_for_Support_in_Zendesk",
    "output_workflow_file_path": "analyzed_workflows/Receive_Updates_for_Support_in_Zendesk/workflow.json",
    "output_readme_file_path": "analyzed_workflows/Receive_Updates_for_Support_in_Zendesk/README.md",
    "summary": "Receives real-time updates for support-related events in Zendesk via a webhook trigger.",
    "inputs": ["Zendesk Trigger"],
    "nodes_used": ["Zendesk Trigger"],
    "outputs": ["Triggers downstream actions in n8n when a support event occurs in Zendesk"],
    "processed_at": "16/06/2025 20:35"
  },
  {
    "input_workflow_name": "33_n8n_check.json",
    "output_workflow_name": "n8n_Check_and_Notify_New_Releases",
    "output_workflow_file_path": "analyzed_workflows/n8n_Check_and_Notify_New_Releases/workflow.json",
    "output_readme_file_path": "analyzed_workflows/n8n_Check_and_Notify_New_Releases/README.md",
    "summary": "Checks the n8n GitHub releases feed and notifies via Telegram and email when a new major version is released.",
    "inputs": ["Manual Trigger", "Cron"],
    "nodes_used": ["Manual Trigger", "Cron", "RSS Feed Read", "Function (Filter by current day)", "IF", "Telegram", "AWS SES"],
    "outputs": ["Telegram message and email notification when a new major n8n release is detected."],
    "processed_at": "16/06/2025 20:35"
  },
  {
    "input_workflow_name": "34_Monitoring_and_alerting.json",
    "output_workflow_name": "Monitoring_and_Alerting_Sensor_Thresholds",
    "output_workflow_file_path": "analyzed_workflows/Monitoring_and_Alerting_Sensor_Thresholds/workflow.json",
    "output_readme_file_path": "analyzed_workflows/Monitoring_and_Alerting_Sensor_Thresholds/README.md",
    "summary": "Monitors sensor readings in a Postgres database and sends an SMS alert via Twilio if a threshold is exceeded, then updates the notification status.",
    "inputs": ["Cron"],
    "nodes_used": ["Cron", "Postgres", "Twilio", "Set", "Postgres1"],
    "outputs": ["SMS alert sent via Twilio when a sensor value exceeds the threshold", "Database updated to mark notification as sent"],
    "processed_at": "16/06/2025 20:35"
  },
  {
    "input_workflow_name": "34_Receive_updates_when_a_sale_is_made_in_Gumroad.json",
    "output_workflow_name": "Receive_Updates_on_Gumroad_Sales",
    "output_workflow_file_path": "analyzed_workflows/Receive_Updates_on_Gumroad_Sales/workflow.json",
    "output_readme_file_path": "analyzed_workflows/Receive_Updates_on_Gumroad_Sales/README.md",
    "summary": "Triggers an n8n workflow whenever a sale is made on Gumroad using a webhook trigger.",
    "inputs": ["Gumroad Trigger"],
    "nodes_used": ["Gumroad Trigger"],
    "outputs": ["Triggers downstream actions in n8n when a sale is made in Gumroad."],
    "processed_at": "17/06/2025 10:07"
  },
  {
    "input_workflow_name": "39KuujB1fbOvx8Al_OpenAI_e-mail_classification_-_application.json",
    "output_workflow_name": "OpenAI_Email_Classification_Application",
    "output_workflow_file_path": "analyzed_workflows/OpenAI_Email_Classification_Application/workflow.json",
    "output_readme_file_path": "analyzed_workflows/OpenAI_Email_Classification_Application/README.md",
    "summary": "Automatically classifies incoming emails and attachments using OpenAI, extracts applicant data, and routes them for further processing.",
    "inputs": ["Email trigger (IMAP)", "PDF attachment"],
    "nodes_used": ["Email trigger", "Extract data from attachment", "Classify email", "Extract variables - email & attachment", "OpenAI Chat Model", "OpenAI Chat Model 2", "Workflow 2", "Workflow 3", "workflow 4", "Sticky Note"],
    "outputs": ["Extracted variables from email and attachment", "Classification label", "Routed to appropriate sub-workflow"],
    "processed_at": "17/06/2025 10:41"
  },
  {
    "input_workflow_name": "39_PostgreSQL_export_to_CSV.json",
    "output_workflow_name": "PostgreSQL_Export_to_CSV",
    "output_workflow_file_path": "analyzed_workflows/PostgreSQL_Export_to_CSV/workflow.json",
    "output_readme_file_path": "analyzed_workflows/PostgreSQL_Export_to_CSV/README.md",
    "summary": "Exports data from a specified PostgreSQL table to a CSV file using n8n.",
    "inputs": ["Manual Trigger (When clicking 'Execute Workflow')"],
    "nodes_used": ["When clicking 'Execute Workflow'", "TableName (Set node)", "Postgres", "Spreadsheet File"],
    "outputs": ["CSV file containing the exported table data"],
    "processed_at": "17/06/2025 10:46"
  }
]